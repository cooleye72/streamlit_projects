# Set up and run this Streamlit App
import streamlit as st
#from helper_functions import llm # <--- This is the helper function that we have created ðŸ†•
# from helper_functions import llm # <--- Not needed anymore. The helper function is now directly called by `customer_query_handler` ðŸ†•
from logics.customer_query_handler import process_user_message, process_user_message2
from helper_functions.utility import check_password
# region <--------- Streamlit App Configuration --------->
st.set_page_config(
    layout="centered",
    page_title="My Streamlit App"
)

# Do not continue if check_password is not True.  
# if not check_password():  
#     st.stop()
# endregion <--------- Streamlit App Configuration --------->    

st.title("Streamlit App")

form = st.form(key="form")
form.subheader("Prompt")

user_prompt = form.text_area("Enter your prompt here", height=200)

with st.spinner('Please wait...'):
    if form.form_submit_button("Submit"):
        st.toast("User Input Submitted - {user_prompt}")
        #response = generate_response_based_on_course_details(user_prompt)
        response = process_user_message(user_prompt) #<--- This calls the `process_user_message` function that we have created ðŸ†•
        #response = llm.get_completion(user_prompt) # <--- This calls the helper function that we have created ðŸ†•
        st.write(response) # <--- This displays the response generated by the LLM onto the frontend ðŸ†•
        st.divider()
        response2 = process_user_message2(user_prompt) #<--- This calls the `process_user_message2` function that we have created ðŸ†•
        st.write(response2)
        print(f"User Input is {user_prompt}")
# Your long-running code here
    pass
#st.file_uploader("Upload a file", type=["csv", "xlsx"])